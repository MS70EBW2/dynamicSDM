% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dynamic_proj_GIF.R
\name{dynamic_proj_GIF}
\alias{dynamic_proj_GIF}
\title{Create GIF of dynamic species distribution and abundance projections}
\usage{
dynamic_proj_GIF(
  dates,
  projection.type,
  drive.folder = NULL,
  user.email = NULL,
  local.directory = NULL,
  save.drive.folder = NULL,
  save.directory = NULL,
  width = 480,
  height = 480,
  legend.max = NULL,
  legend.min = NULL,
  legend.name = NULL,
  file.name = NULL
)
}
\arguments{
\item{dates}{a character vector , projection dates in format YYYY-MM-DD.}

\item{projection.type}{a character string, the type of distribution or abundance projection to plot. One of "'proportional'", "'binary'", "'abundance'" and "'stacked'".}

\item{drive.folder}{optional; a character string, the Google Drive folder to read projection rasters from.}

\item{user.email}{optional; a character string, user email for initialising Google Drive. Required if drive.folder or save.drive.folder used.}

\item{local.directory}{optional; a character string, the path to local directory to read projection rasters from.}

\item{save.drive.folder}{optional; a character string, Google Drive folder to save GIF to.}

\item{save.directory}{optional; a character string, path to local directory to save GIF to.}

\item{width}{optional; a numeric value, the GIF width in pixels. Default = 480.}

\item{height}{optional; a numeric value, the GIF height in pixels. Default = 480.}

\item{legend.max}{optional; a numeric value, the maximum limit of legend values to standardise across projections.}

\item{legend.min}{optional; a numeric value, the minimum limit of legend values to standardise across projections.}

\item{legend.name}{optional; a character string, the name for the legend title. Default = projection.type.}

\item{file.name}{optional, a character string, the name for the saved GIF file. Default = projection.type.}
}
\value{
Exports GIF to Google Drive folder or local directory.
}
\description{
Plots dynamic species distribution and abundance projections through time and combines images into a GIF.
}
\details{
Function reads in projection rasters for each date and projection.type. These are plotted using ggplot2 and combined into Graphics Interchange Format (GIF).

For dynamic_proj_GIF to find the projection rasters for each date, then “.tif” files must be uniquely named with the date in format YYYY-MM-DD and projection.type. If more than one file name matches the date and projection.type, the function will error.

If one of drive.folder or save.drive.folder is used then user.email for the Google Drive account must be provided. This requires users to have installed R package "googledrive" and initialised Google Drive with valid log-in credentials. Please follow instructions on https://googledrive.tidyverse.org/.
}
\references{
Wickham, H., and Chang, W, 2016. Package ‘ggplot2’. Create elegant data visualisations using the grammar of graphics. Version, 2(1), pp.1-189.
}
